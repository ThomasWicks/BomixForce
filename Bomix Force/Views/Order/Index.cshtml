@using X.PagedList.Mvc.Core
@model X.PagedList.PagedList<Bomix_Force.ViewModels.OrderViewModel>

<link href="~/Content/PagedList.css" rel="stylesheet" type="text/css" />
@{
    ViewData["Title"] = "Index";
}
<div id="OrderDetailsHere"></div>
<div class="clearfix mx-5">
    <h2 class="mt-3">Pedidos</h2>
    <b>Procurar por:</b>
    @using (Html.BeginForm())
    {
        <form id="typeSearch" asp-controller="Order" asp-action="Index">
            <div class="row ml-1 mt-3">
                <select id="selectType" class="form-control col-6 mr-5" name="selectType">
                    <option value="nOrder">Número pedido</option>
                    <option value="status">Status</option>
                </select>
                @Html.TextBox("searchString") <button type="submit" id="SearchBtn" value="Procurar"> <i class="fas fa-search"></i></button>
            </div>
        </form>
    }
    <div class="table-responsive mt-5">
        <table class="table table-striped">
            <thead class="thead-dark">

                <tr>

                    <th class="text-center">
                        Numero Pedido
                    </th>
                    <th class="text-center">
                        Cliente
                    </th>
                    <th class="text-center">
                        Emissão
                        @*@Html.ActionLink("Emissão", "Index", new { filter = "Emissao" })*@
                        @if (ViewBag.filter == "EmissaoAsc")
                        {
                            <a href="@Url.Action("Index", "Order", new { filter = "EmissaoDesc" })"><i class="fas fa-caret-up"></i></a>
                        }
                        @if (ViewBag.filter != "EmissaoAsc")
                        {
                            <a href="@Url.Action("Index", "Order", new { filter = "EmissaoAsc" })"><i class="fas fa-caret-down"></i></a>
                        }

                        @* colocar um if para verificar se é pra ser o iconede menu down ou menu up *@
                        @*<span class="glyphicon glyphicon-menu-up"></span>*@ @*Botão virado pra cima*@
                        @*<span class="glyphicon glyphicon-menu-down"></span>*@ @*Botão virado pra baixo*@
                    </th>

                    <th class="text-center">
                        Cidade - UF
                    </th>
                    <th class="text-center">
                        Status
                    </th>
                    <th class="text-center">
                        Detalhes
                    </th>
                </tr>
            </thead>
            <tbody>
                @if (Model?.Count() > 0)
                {
                    foreach (var item in Model)
                    {
                        <tr>
                            <th class="text-center">
                                @item.Pedido
                            </th>
                            <th class="text-center">
                                @item.Cliente
                            </th>
                            <th class="text-center">
                                @Html.DisplayFor(modelItem => @item.Emissao)
                            </th>
                            <th class="text-center">
                                @item.Cidade - @item.UF
                            </th>
                            @if (@item.Status == "ENCERRADO")
                            {
                                <th class="mt-2 badge bg-danger">

                                    Encerrado
                                </th>

                            }
                            else if (@item.Status == "ABERTO")
                            {
                                <th class="mt-2 badge bg-primary">
                                    Aberto
                                </th>
                            }
                            else if (@item.Status == "LIBERADO")
                            {
                                <th class="mt-2 badge bg-success">
                                    Liberado
                                </th>
                            }
                            else if (@item.Status == "ORCAMENTO")
                            {
                                <th class="mt-2 badge bg-warning">
                                    Orçamento
                                </th>
                            }
                            else
                            {
                                <th class="mt-2 badge bg-secondary">
                                    @item.Status
                                </th>
                            }

                            <th class="text-center">
                                <button class="btn" data-toggle="details-modal" data-target="#detailsOrder" data-url="@Url.Action($"Details/{item.Pedido}")"><i class="fas fa-info-circle fa-2x blue"></i></button>
                            </th>

                        </tr>
                    }
                    <div class="float-right">@Html.PagedListPager(Model, pageNumber => Url.Action("Index", new { pageNumber, filter = ViewBag.filter, searchString = ViewBag.searchString, typeSearch = ViewBag.typeSearch, selectType = ViewBag.selectType, @class = "float-right" }))</div>
                }
                else
                {
                    <tr>
                        <td>
                            <h6>Não há pedidos cadastrados.</h6>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
    </div>


</div>

<style lang="scss" scoped>
    .badge {
        display: flex;
        align-items: center;
        justify-content: center;
        font-weight: 500;
        border-radius: 25px;
    }

    .blue {
        color: #007bff;
    }
</style>
