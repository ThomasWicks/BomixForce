// <auto-generated />
using System;
using Bomix_Force.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bomix_Force.Migrations
{
    [DbContext(typeof(ModelContext))]
    [Migration("20200802132600_Initial")]
    partial class Initial
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bomix_Force.Data.Entities.Access", b =>
                {
                    b.Property<int>("IdProfile")
                        .HasColumnName("ID_PROFILE")
                        .HasColumnType("int");

                    b.Property<int>("IdPermission")
                        .HasColumnName("ID_PERMISSION")
                        .HasColumnType("int");

                    b.Property<int?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("int");

                    b.HasKey("IdProfile", "IdPermission");

                    b.HasIndex("IdPermission");

                    b.ToTable("ACCESS");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Company", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Cnpj")
                        .IsRequired()
                        .HasColumnName("CNPJ")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("COMPANY");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Document", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.HasKey("Id");

                    b.ToTable("DOCUMENT");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Item", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.Property<string>("Status_art")
                        .IsRequired()
                        .HasColumnName("STATUS_ART")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("ITEM");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.N_conformity", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnName("DESCRIPTION")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Id_Order")
                        .HasColumnType("int");

                    b.Property<string>("Lot")
                        .IsRequired()
                        .HasColumnName("LOT")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("OrderId")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.HasIndex("OrderId");

                    b.ToTable("N_CONFORMITY");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Order", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<DateTime>("Date")
                        .HasColumnName("DATE")
                        .HasColumnType("datetime2");

                    b.Property<int>("Number")
                        .HasColumnName("NUMBER")
                        .HasColumnType("int");

                    b.Property<string>("Status_Order")
                        .IsRequired()
                        .HasColumnName("STATUS")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.ToTable("ORDER");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnName("CLAIMTYPE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClaimValue")
                        .HasColumnName("CLAIMVALUE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PERMISSION");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Person", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("CompanyId")
                        .HasColumnType("int");

                    b.Property<int>("Cpf")
                        .HasColumnName("CPF")
                        .HasColumnType("int");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int?>("OrderId")
                        .HasColumnType("int");

                    b.Property<int>("Tel")
                        .HasColumnName("TEL")
                        .HasColumnType("int");

                    b.Property<string>("UserId")
                        .IsRequired()
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("Id");

                    b.HasIndex("CompanyId");

                    b.HasIndex("OrderId");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("PERSON");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("ACTIVE")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PROFILE");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.User", b =>
                {
                    b.Property<string>("Id")
                        .HasColumnType("nvarchar(450)");

                    b.Property<int>("AccessFailedCount")
                        .HasColumnName("ACCESSFAILEDCOUNT")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("ACTIVE")
                        .HasColumnType("CHAR")
                        .HasMaxLength(1);

                    b.Property<string>("ConcurrencyStamp")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnName("EMAILCONFIRMED")
                        .HasColumnType("bit");

                    b.Property<int>("IdProfile")
                        .HasColumnName("ID_PROFILE")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnName("LOCKOUTENABLED")
                        .HasColumnType("bit");

                    b.Property<DateTimeOffset?>("LockoutEnd")
                        .HasColumnType("datetimeoffset");

                    b.Property<DateTime?>("LockoutEndDateUTC")
                        .HasColumnName("LOCKOUTENDDATEUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("NormalizedEmail")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("NormalizedUserName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnName("PASSWORDHASH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PHONENUMBER")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnName("PHONENUMBERCONFIRMED")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnName("SECURITYSTAMP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnName("TWOFACTORENABLED")
                        .HasColumnType("bit");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("IdProfile");

                    b.ToTable("User");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.UserLogin", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnName("LOGINPROVIDER")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnName("PROVIDERKEY")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("UserId")
                        .HasColumnType("nvarchar(450)");

                    b.HasKey("IdUser", "LoginProvider", "ProviderKey");

                    b.HasIndex("UserId");

                    b.ToTable("USERLOGIN");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Access", b =>
                {
                    b.HasOne("Bomix_Force.Data.Entities.Permission", "Permission")
                        .WithMany("AccessList")
                        .HasForeignKey("IdPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bomix_Force.Data.Entities.Profile", "Profile")
                        .WithMany("AccessList")
                        .HasForeignKey("IdProfile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Item", b =>
                {
                    b.HasOne("Bomix_Force.Data.Entities.Order", "Order")
                        .WithMany("Item")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.N_conformity", b =>
                {
                    b.HasOne("Bomix_Force.Data.Entities.Order", "Order")
                        .WithMany("N_Conformities")
                        .HasForeignKey("OrderId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Order", b =>
                {
                    b.HasOne("Bomix_Force.Data.Entities.Company", "Company")
                        .WithMany("Orders")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Person", b =>
                {
                    b.HasOne("Bomix_Force.Data.Entities.Company", "Company")
                        .WithMany("Persons")
                        .HasForeignKey("CompanyId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bomix_Force.Data.Entities.Order", null)
                        .WithMany("Person")
                        .HasForeignKey("OrderId");

                    b.HasOne("Bomix_Force.Data.Entities.User", "User")
                        .WithOne("Person")
                        .HasForeignKey("Bomix_Force.Data.Entities.Person", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.User", b =>
                {
                    b.HasOne("Bomix_Force.Data.Entities.Profile", "Profile")
                        .WithMany("UserList")
                        .HasForeignKey("IdProfile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("Bomix_Force.Data.Entities.User", "User")
                        .WithMany("UserLoginList")
                        .HasForeignKey("UserId");
                });
#pragma warning restore 612, 618
        }
    }
}
