// <auto-generated />
using System;
using Bomix_Force.Data.Context;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace Bomix_Force.Migrations
{
    [DbContext(typeof(ModelContext))]
    partial class ModelContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("Bomix_Force.Data.Entities.Access", b =>
                {
                    b.Property<int>("IdProfile")
                        .HasColumnName("ID_PROFILE")
                        .HasColumnType("int");

                    b.Property<int>("IdPermission")
                        .HasColumnName("ID_PERMISSION")
                        .HasColumnType("int");

                    b.Property<int?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("int");

                    b.HasKey("IdProfile", "IdPermission");

                    b.HasIndex("IdPermission");

                    b.ToTable("ACCESS");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Permission", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("ClaimType")
                        .HasColumnName("CLAIMTYPE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<string>("ClaimValue")
                        .HasColumnName("CLAIMVALUE")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<int?>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("int");

                    b.HasKey("Id");

                    b.ToTable("PERMISSION");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Profile", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("ACTIVE")
                        .HasColumnType("nvarchar(1)")
                        .HasMaxLength(1);

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.ToTable("PROFILE");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.User", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnName("ID")
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:IdentityIncrement", 1)
                        .HasAnnotation("SqlServer:IdentitySeed", 1)
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("AccessFailedCount")
                        .HasColumnName("ACCESSFAILEDCOUNT")
                        .HasColumnType("int");

                    b.Property<string>("Active")
                        .IsRequired()
                        .HasColumnName("ACTIVE")
                        .HasColumnType("CHAR")
                        .HasMaxLength(1);

                    b.Property<string>("Cpf")
                        .IsRequired()
                        .HasColumnName("CPF")
                        .HasColumnType("nvarchar(11)")
                        .HasMaxLength(11);

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasColumnName("EMAIL")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("EmailConfirmed")
                        .HasColumnName("EMAILCONFIRMED")
                        .HasColumnType("bit");

                    b.Property<int>("IdEstablishment")
                        .HasColumnName("ID_ESTABLISHMENT")
                        .HasColumnType("int");

                    b.Property<int>("IdProfile")
                        .HasColumnName("ID_PROFILE")
                        .HasColumnType("int");

                    b.Property<bool>("LockoutEnabled")
                        .HasColumnName("LOCKOUTENABLED")
                        .HasColumnType("bit");

                    b.Property<DateTime?>("LockoutEndDateUTC")
                        .HasColumnName("LOCKOUTENDDATEUTC")
                        .HasColumnType("datetime2");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnName("NAME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasColumnName("PASSWORDHASH")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("PhoneNumber")
                        .HasColumnName("PHONENUMBER")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.Property<bool>("PhoneNumberConfirmed")
                        .HasColumnName("PHONENUMBERCONFIRMED")
                        .HasColumnType("bit");

                    b.Property<bool>("RecieveNotification")
                        .HasColumnName("RECIEVENOTIFICATION")
                        .HasColumnType("bit");

                    b.Property<string>("SecurityStamp")
                        .HasColumnName("SECURITYSTAMP")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("TwoFactorEnabled")
                        .HasColumnName("TWOFACTORENABLED")
                        .HasColumnType("bit");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasColumnName("USERNAME")
                        .HasColumnType("nvarchar(50)")
                        .HasMaxLength(50);

                    b.HasKey("Id");

                    b.HasIndex("IdProfile");

                    b.ToTable("USER");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.UserLogin", b =>
                {
                    b.Property<int>("IdUser")
                        .HasColumnName("ID_USER")
                        .HasColumnType("int");

                    b.Property<string>("LoginProvider")
                        .HasColumnName("LOGINPROVIDER")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.Property<string>("ProviderKey")
                        .HasColumnName("PROVIDERKEY")
                        .HasColumnType("nvarchar(128)")
                        .HasMaxLength(128);

                    b.HasKey("IdUser", "LoginProvider", "ProviderKey");

                    b.ToTable("USERLOGIN");
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.Access", b =>
                {
                    b.HasOne("Bomix_Force.Data.Entities.Permission", "Permission")
                        .WithMany("AccessList")
                        .HasForeignKey("IdPermission")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Bomix_Force.Data.Entities.Profile", "Profile")
                        .WithMany("AccessList")
                        .HasForeignKey("IdProfile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.User", b =>
                {
                    b.HasOne("Bomix_Force.Data.Entities.Profile", "Profile")
                        .WithMany("UserList")
                        .HasForeignKey("IdProfile")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });

            modelBuilder.Entity("Bomix_Force.Data.Entities.UserLogin", b =>
                {
                    b.HasOne("Bomix_Force.Data.Entities.User", "User")
                        .WithMany("UserLoginList")
                        .HasForeignKey("IdUser")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
